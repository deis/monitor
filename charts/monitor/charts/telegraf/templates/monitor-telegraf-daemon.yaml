apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: deis-monitor-telegraf
  labels:
    heritage: deis
  annotations:
    component.deis.io/version: {{ .Values.docker_tag }}
spec:
  template:
    metadata:
      labels:
        app: deis-monitor-telegraf
    spec:
      serviceAccount: deis-monitor-telegraf
      containers:
        - name: deis-monitor-telegraf
          image: quay.io/{{.Values.org}}/telegraf:{{.Values.docker_tag}}
          imagePullPolicy: {{.Values.pull_policy}}
{{- if or (.Values.limits_cpu) (.Values.limits_memory)}}
          resources:
            limits:
{{- if (.Values.limits_cpu) }}
              cpu: {{.Values.limits_cpu}}
{{- end}}
{{- if (.Values.limits_memory) }}
              memory: {{.Values.limits_memory}}
{{- end}}
{{- end}}
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if eq .Values.global.influxdb_location "off-cluster" }}
          - name: "INFLUXDB_URLS"
            valueFrom:
              secretKeyRef:
                name: influxdb-creds
                key: url
          - name: "INFLUXDB_DATABASE"
            valueFrom:
              secretKeyRef:
                name: influxdb-creds
                key: database
          - name: "INFLUXDB_USERNAME"
            valueFrom:
              secretKeyRef:
                name: influxdb-creds
                key: user
          - name: "INFLUXDB_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: influxdb-creds
                key: password
          {{- else }}
          - name: "INFLUXDB_URLS"
            value: "\"http://{{.Release.Name}}-influxdb.{{.Release.Namespace}}.svc.cluster.local:8086\""
          - name: "INFLUXDB_INPUT_URLS"
            value: "\"http://{{.Release.Name}}-influxdb.{{.Release.Namespace}}.svc.cluster.local:8086/debug/vars\""
          - name: "ENABLE_INFLUXDB_INPUT"
            value: "true"
          {{- end }}
          - name: "HOST_PROC"
            value: "/rootfs/proc"
          - name: "HOST_SYS"
            value: "/rootfs/sys"
          - name: "AGENT_QUIET"
            value: "true"
          - name: "AGENT_BUFFER_LIMIT"
            value: "100000"
          - name: "ENABLE_KUBERNETES"
            value: "true"
          - name: "NSQ_CONSUMER_SERVER"
            value: "$(DEIS_NSQD_SERVICE_HOST):$(DEIS_NSQD_SERVICE_PORT_TRANSPORT)"
          - name: "NSQ_CONSUMER_TOPIC"
            value: "metrics"
          - name: "NSQ_ENDPOINTS"
            value: "\"http://$(DEIS_NSQD_SERVICE_HOST):$(DEIS_NSQD_SERVICE_PORT_HTTP)\""
          {{- if ne .Values.global.logger_redis_location "off-cluster" }}
          - name: DEIS_LOGGER_REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: logger-redis-creds
                key: password
          - name: "REDIS_SERVERS"
            value: "\"tcp://:$(DEIS_LOGGER_REDIS_PASSWORD)@$(DEIS_LOGGER_REDIS_SERVICE_HOST):$(DEIS_LOGGER_REDIS_SERVICE_PORT)\""
          {{- end }}
          volumeMounts:
          - mountPath: /var/run/docker.sock
            name: docker-socket
          - name: sysro
            mountPath: /rootfs/sys
            readOnly: true
          - name: procro
            mountPath: /rootfs/proc
            readOnly: true
          - name: varrunutmpro
            mountPath: /var/run/utmp
            readOnly: true
          - name: logger-redis-creds
            mountPath: /var/run/secrets/deis/redis/creds
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: sysro
        hostPath:
          path: /sys
      - name: procro
        hostPath:
          path: /proc
      - name: varrunutmpro
        hostPath:
          path: /var/run/utmp
      - name: logger-redis-creds
        secret:
          secretName: logger-redis-creds
